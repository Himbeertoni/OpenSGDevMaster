/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2013 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 * contact: dirk@opensg.org, gerrit.voss@vossg.org, carsten_neumann@gmx.net  *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class WindowEventProducer
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGWINDOWEVENTPRODUCERBASE_H_
#define _OSGWINDOWEVENTPRODUCERBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "OSGConfig.h"
#include "OSGContribToolboxWindowDef.h"

//#include "OSGBaseTypes.h"

#include "OSGWindow.h" // Parent

#include "OSGSysFields.h"               // Enabled type
#include "OSGBaseFields.h"              // LastUpdateTime type
#include "OSGWindowEventProducerEventSourceFields.h" // EventSource type

#include "OSGWindowEventProducerFields.h"

OSG_BEGIN_NAMESPACE


class WindowEventProducer;

//! \brief WindowEventProducer Base Class.

class OSG_CONTRIBTOOLBOXWINDOW_DLLMAPPING WindowEventProducerBase : public Window
{
  public:

    typedef Window Inherited;
    typedef Window ParentContainer;

    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(WindowEventProducer);

    /*==========================  PUBLIC  =================================*/

  public:

    enum
    {
        EnabledFieldId = Inherited::NextFieldId,
        UseCallbackForDrawFieldId = EnabledFieldId + 1,
        UseCallbackForReshapeFieldId = UseCallbackForDrawFieldId + 1,
        LastUpdateTimeFieldId = UseCallbackForReshapeFieldId + 1,
        LockCursorFieldId = LastUpdateTimeFieldId + 1,
        EventSourceFieldId = LockCursorFieldId + 1,
        NextFieldId = EventSourceFieldId + 1
    };

    static const OSG::BitVector EnabledFieldMask =
        (TypeTraits<BitVector>::One << EnabledFieldId);
    static const OSG::BitVector UseCallbackForDrawFieldMask =
        (TypeTraits<BitVector>::One << UseCallbackForDrawFieldId);
    static const OSG::BitVector UseCallbackForReshapeFieldMask =
        (TypeTraits<BitVector>::One << UseCallbackForReshapeFieldId);
    static const OSG::BitVector LastUpdateTimeFieldMask =
        (TypeTraits<BitVector>::One << LastUpdateTimeFieldId);
    static const OSG::BitVector LockCursorFieldMask =
        (TypeTraits<BitVector>::One << LockCursorFieldId);
    static const OSG::BitVector EventSourceFieldMask =
        (TypeTraits<BitVector>::One << EventSourceFieldId);
    static const OSG::BitVector NextFieldMask =
        (TypeTraits<BitVector>::One << NextFieldId);
        
    typedef SFBool            SFEnabledType;
    typedef SFBool            SFUseCallbackForDrawType;
    typedef SFBool            SFUseCallbackForReshapeType;
    typedef SFTime            SFLastUpdateTimeType;
    typedef SFBool            SFLockCursorType;
    typedef SFUnrecWindowEventProducerEventSourcePtr SFEventSourceType;

    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Get                                 */
    /*! \{                                                                 */


                  SFBool              *editSFEnabled        (void);
            const SFBool              *getSFEnabled         (void) const;

                  SFBool              *editSFUseCallbackForDraw(void);
            const SFBool              *getSFUseCallbackForDraw (void) const;

                  SFBool              *editSFUseCallbackForReshape(void);
            const SFBool              *getSFUseCallbackForReshape (void) const;

                  SFTime              *editSFLastUpdateTime (void);
            const SFTime              *getSFLastUpdateTime  (void) const;

                  SFBool              *editSFLockCursor     (void);
            const SFBool              *getSFLockCursor      (void) const;
            const SFUnrecWindowEventProducerEventSourcePtr *getSFEventSource    (void) const;
                  SFUnrecWindowEventProducerEventSourcePtr *editSFEventSource    (void);


                  bool                &editEnabled        (void);
                  bool                 getEnabled         (void) const;

                  bool                &editUseCallbackForDraw(void);
                  bool                 getUseCallbackForDraw (void) const;

                  bool                &editUseCallbackForReshape(void);
                  bool                 getUseCallbackForReshape (void) const;

                  Time                &editLastUpdateTime (void);
            const Time                &getLastUpdateTime  (void) const;

                  bool                &editLockCursor     (void);
                  bool                 getLockCursor      (void) const;

                  WindowEventProducerEventSource * getEventSource    (void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Field Set                                 */
    /*! \{                                                                 */

            void setEnabled        (const bool value);
            void setUseCallbackForDraw(const bool value);
            void setUseCallbackForReshape(const bool value);
            void setLastUpdateTime (const Time &value);
            void setLockCursor     (const bool value);
            void setEventSource    (WindowEventProducerEventSource * const value);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr Field Set                                 */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                Ptr MField Set                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual SizeT  getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */
    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                      Fields                                  */
    /*! \{                                                                 */

    SFBool            _sfEnabled;
    SFBool            _sfUseCallbackForDraw;
    SFBool            _sfUseCallbackForReshape;
    SFTime            _sfLastUpdateTime;
    SFBool            _sfLockCursor;
    SFUnrecWindowEventProducerEventSourcePtr _sfEventSource;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    WindowEventProducerBase(void);
    WindowEventProducerBase(const WindowEventProducerBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~WindowEventProducerBase(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */

    void onCreate(const WindowEventProducer *source = NULL);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                    Generic Field Access                      */
    /*! \{                                                                 */

    GetFieldHandlePtr  getHandleEnabled         (void) const;
    EditFieldHandlePtr editHandleEnabled        (void);
    GetFieldHandlePtr  getHandleUseCallbackForDraw (void) const;
    EditFieldHandlePtr editHandleUseCallbackForDraw(void);
    GetFieldHandlePtr  getHandleUseCallbackForReshape (void) const;
    EditFieldHandlePtr editHandleUseCallbackForReshape(void);
    GetFieldHandlePtr  getHandleLastUpdateTime  (void) const;
    EditFieldHandlePtr editHandleLastUpdateTime (void);
    GetFieldHandlePtr  getHandleLockCursor      (void) const;
    EditFieldHandlePtr editHandleLockCursor     (void);
    GetFieldHandlePtr  getHandleEventSource     (void) const;
    EditFieldHandlePtr editHandleEventSource    (void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      WindowEventProducerBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/

  private:
    /*---------------------------------------------------------------------*/

    // prohibit default functions (move to 'public' if you need one)
    void operator =(const WindowEventProducerBase &source);
};

typedef WindowEventProducerBase *WindowEventProducerBaseP;

OSG_END_NAMESPACE

#endif /* _OSGWINDOWEVENTPRODUCERBASE_H_ */
