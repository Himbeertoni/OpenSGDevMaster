/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2013 by the OpenSG Forum                 *
 *                                                                           *
 * contact: David Kabala (djkabala@gmail.com)                                *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class TBAnimation!
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/

OSG_BEGIN_NAMESPACE



//! access the type of the class
inline
OSG::FieldContainerType &TBAnimationBase::getClassType(void)
{
    return _type;
}

//! access the numerical type of the class
inline
OSG::UInt32 TBAnimationBase::getClassTypeId(void)
{
    return _type.getId();
}

inline
OSG::UInt16 TBAnimationBase::getClassGroupId(void)
{
    return _type.getGroupId();
}

/*------------------------------ get -----------------------------------*/

//! Get the value of the TBAnimation::_sfCycling field.

inline
Int32 &TBAnimationBase::editCycling(void)
{
    editSField(CyclingFieldMask);

    return _sfCycling.getValue();
}

//! Get the value of the TBAnimation::_sfCycling field.
inline
      Int32  TBAnimationBase::getCycling(void) const
{
    return _sfCycling.getValue();
}

//! Set the value of the TBAnimation::_sfCycling field.
inline
void TBAnimationBase::setCycling(const Int32 value)
{
    editSField(CyclingFieldMask);

    _sfCycling.setValue(value);
}
//! Get the value of the TBAnimation::_sfScale field.

inline
Real32 &TBAnimationBase::editScale(void)
{
    editSField(ScaleFieldMask);

    return _sfScale.getValue();
}

//! Get the value of the TBAnimation::_sfScale field.
inline
      Real32  TBAnimationBase::getScale(void) const
{
    return _sfScale.getValue();
}

//! Set the value of the TBAnimation::_sfScale field.
inline
void TBAnimationBase::setScale(const Real32 value)
{
    editSField(ScaleFieldMask);

    _sfScale.setValue(value);
}
//! Get the value of the TBAnimation::_sfOffset field.

inline
Real32 &TBAnimationBase::editOffset(void)
{
    editSField(OffsetFieldMask);

    return _sfOffset.getValue();
}

//! Get the value of the TBAnimation::_sfOffset field.
inline
      Real32  TBAnimationBase::getOffset(void) const
{
    return _sfOffset.getValue();
}

//! Set the value of the TBAnimation::_sfOffset field.
inline
void TBAnimationBase::setOffset(const Real32 value)
{
    editSField(OffsetFieldMask);

    _sfOffset.setValue(value);
}
//! Get the value of the TBAnimation::_sfSpan field.

inline
Real32 &TBAnimationBase::editSpan(void)
{
    editSField(SpanFieldMask);

    return _sfSpan.getValue();
}

//! Get the value of the TBAnimation::_sfSpan field.
inline
      Real32  TBAnimationBase::getSpan(void) const
{
    return _sfSpan.getValue();
}

//! Set the value of the TBAnimation::_sfSpan field.
inline
void TBAnimationBase::setSpan(const Real32 value)
{
    editSField(SpanFieldMask);

    _sfSpan.setValue(value);
}
//! Get the value of the TBAnimation::_sfCycles field.

inline
Real32 &TBAnimationBase::editCycles(void)
{
    editSField(CyclesFieldMask);

    return _sfCycles.getValue();
}

//! Get the value of the TBAnimation::_sfCycles field.
inline
      Real32  TBAnimationBase::getCycles(void) const
{
    return _sfCycles.getValue();
}

//! Set the value of the TBAnimation::_sfCycles field.
inline
void TBAnimationBase::setCycles(const Real32 value)
{
    editSField(CyclesFieldMask);

    _sfCycles.setValue(value);
}

//! Get the value of the TBAnimation::_sfEventSource field.
inline
TBAnimationEventSource * TBAnimationBase::getEventSource(void) const
{
    return _sfEventSource.getValue();
}

//! Set the value of the TBAnimation::_sfEventSource field.
inline
void TBAnimationBase::setEventSource(TBAnimationEventSource * const value)
{
    editSField(EventSourceFieldMask);

    _sfEventSource.setValue(value);
}


#ifdef OSG_MT_CPTR_ASPECT
inline
void TBAnimationBase::execSync (      TBAnimationBase *pFrom,
                                        ConstFieldMaskArg  whichField,
                                        AspectOffsetStore &oOffsets,
                                        ConstFieldMaskArg  syncMode,
                                  const UInt32             uiSyncInfo)
{
    Inherited::execSync(pFrom, whichField, oOffsets, syncMode, uiSyncInfo);

    if(FieldBits::NoField != (CyclingFieldMask & whichField))
        _sfCycling.syncWith(pFrom->_sfCycling);

    if(FieldBits::NoField != (ScaleFieldMask & whichField))
        _sfScale.syncWith(pFrom->_sfScale);

    if(FieldBits::NoField != (OffsetFieldMask & whichField))
        _sfOffset.syncWith(pFrom->_sfOffset);

    if(FieldBits::NoField != (SpanFieldMask & whichField))
        _sfSpan.syncWith(pFrom->_sfSpan);

    if(FieldBits::NoField != (CyclesFieldMask & whichField))
        _sfCycles.syncWith(pFrom->_sfCycles);

    if(FieldBits::NoField != (EventSourceFieldMask & whichField))
        _sfEventSource.syncWith(pFrom->_sfEventSource);
}
#endif


inline
const Char8 *TBAnimationBase::getClassname(void)
{
    return "TBAnimation";
}
OSG_GEN_CONTAINERPTR(TBAnimation);

OSG_END_NAMESPACE

