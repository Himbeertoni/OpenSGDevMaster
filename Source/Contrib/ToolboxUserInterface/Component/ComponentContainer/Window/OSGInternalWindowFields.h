/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2013 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
 * contact: David Kabala (djkabala@gmail.com)                                *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSGINTERNALWINDOWFIELDS_H_
#define _OSGINTERNALWINDOWFIELDS_H_
#ifdef __sgi
#pragma once
#endif

#include "OSGConfig.h"
#include "OSGContribToolboxUserInterfaceDef.h"

#include "OSGFieldContainerFields.h"
#include "OSGPointerSField.h"
#include "OSGPointerMField.h"


OSG_BEGIN_NAMESPACE


class InternalWindow;

OSG_GEN_CONTAINERPTR(InternalWindow);
/*! \ingroup GrpContribToolboxUserInterfaceFieldTraits
    \ingroup GrpLibOSGContribToolboxUserInterface
 */
template <>
struct FieldTraits<InternalWindow *, nsOSG> :
    public FieldTraitsFCPtrBase<InternalWindow *, nsOSG>
{
  private:

    static PointerType             _type;

  public:

    typedef FieldTraits<InternalWindow *, nsOSG>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_CONTRIBTOOLBOXUSERINTERFACE_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);

};

template<> inline
const Char8 *FieldTraits<InternalWindow *, nsOSG>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecInternalWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<InternalWindow *, nsOSG>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecInternalWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<InternalWindow *, nsOSG>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakInternalWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<InternalWindow *, nsOSG>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdInternalWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<InternalWindow *, nsOSG>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecInternalWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<InternalWindow *, nsOSG>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecInternalWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<InternalWindow *, nsOSG>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakInternalWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<InternalWindow *, nsOSG>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdInternalWindowPtr"; 
}


/*! \ingroup GrpContribToolboxUserInterfaceFieldTraits
 */
template <>
struct FieldTraits<InternalWindow *, nsOSG + 1> :
    public FieldTraitsFCPtrBase<InternalWindow *, nsOSG + 1>
{
  private:

  public:
    typedef FieldTraits<InternalWindow *, nsOSG + 1>  Self;

    enum                        { Convertible = NotConvertible };

    static OSG_CONTRIBTOOLBOXUSERINTERFACE_DLLMAPPING DataType &getType(void);

    template<typename RefCountPolicy> inline
    static const Char8    *getSName     (void);

    template<typename RefCountPolicy> inline
    static const Char8    *getMName     (void);
};

template<> inline
const Char8 *FieldTraits<InternalWindow *, nsOSG + 1>::getSName<RecordedRefCountPolicy>(void)
{
    return "SFRecChildInternalWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<InternalWindow *, nsOSG + 1>::getSName<UnrecordedRefCountPolicy>(void)
{
    return "SFUnrecChildInternalWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<InternalWindow *, nsOSG + 1>::getSName<WeakRefCountPolicy>(void)
{
    return "SFWeakChildInternalWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<InternalWindow *, nsOSG + 1>::getSName<NoRefCountPolicy>(void)
{
    return "SFUnrefdChildInternalWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<InternalWindow *, nsOSG + 1>::getMName<RecordedRefCountPolicy>(void)
{
    return "MFRecChildInternalWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<InternalWindow *, nsOSG + 1>::getMName<UnrecordedRefCountPolicy>(void)
{
    return "MFUnrecChildInternalWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<InternalWindow *, nsOSG + 1>::getMName<WeakRefCountPolicy>(void)
{
    return "MFWeakChildInternalWindowPtr"; 
}

template<> inline
const Char8 *FieldTraits<InternalWindow *, nsOSG + 1>::getMName<NoRefCountPolicy>(void)
{
    return "MFUnrefdChildInternalWindowPtr"; 
}


#ifndef DOXYGEN_SHOULD_SKIP_THIS
/*! \ingroup GrpContribToolboxUserInterfaceFieldSFields */
typedef PointerSField<InternalWindow *,
                      RecordedRefCountPolicy, nsOSG  > SFRecInternalWindowPtr;
/*! \ingroup GrpContribToolboxUserInterfaceFieldSFields */
typedef PointerSField<InternalWindow *,
                      UnrecordedRefCountPolicy, nsOSG> SFUnrecInternalWindowPtr;
/*! \ingroup GrpContribToolboxUserInterfaceFieldSFields */
typedef PointerSField<InternalWindow *,
                      WeakRefCountPolicy, nsOSG      > SFWeakInternalWindowPtr;
/*! \ingroup GrpContribToolboxUserInterfaceFieldSFields */
typedef PointerSField<InternalWindow *,
                      NoRefCountPolicy, nsOSG        > SFUncountedInternalWindowPtr;


/*! \ingroup GrpContribToolboxUserInterfaceFieldMFields */
typedef PointerMField<InternalWindow *,
                      RecordedRefCountPolicy, nsOSG  > MFRecInternalWindowPtr;
/*! \ingroup GrpContribToolboxUserInterfaceFieldMFields */
typedef PointerMField<InternalWindow *,
                      UnrecordedRefCountPolicy, nsOSG> MFUnrecInternalWindowPtr;
/*! \ingroup GrpContribToolboxUserInterfaceFieldMFields */
typedef PointerMField<InternalWindow *,
                      WeakRefCountPolicy, nsOSG      > MFWeakInternalWindowPtr;
/*! \ingroup GrpContribToolboxUserInterfaceFieldMFields */
typedef PointerMField<InternalWindow *,
                      NoRefCountPolicy, nsOSG        > MFUncountedInternalWindowPtr;



/*! \ingroup GrpContribToolboxUserInterfaceFieldMFields */
typedef ChildPointerMField<
          InternalWindow *, 
          UnrecordedRefCountPolicy,
          nsOSG + 1             > MFUnrecChildInternalWindowPtr;



#else // these are the doxygen hacks

/*! \ingroup GrpContribToolboxUserInterfaceFieldSFields \ingroup GrpLibOSGContribToolboxUserInterface */
struct SFRecInternalWindowPtr : 
    public PointerSField<InternalWindow *,
                         RecordedRefCountPolicy> {};
/*! \ingroup GrpContribToolboxUserInterfaceFieldSFields \ingroup GrpLibOSGContribToolboxUserInterface */
struct SFUnrecInternalWindowPtr : 
    public PointerSField<InternalWindow *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpContribToolboxUserInterfaceFieldSFields \ingroup GrpLibOSGContribToolboxUserInterface */
struct SFWeakInternalWindowPtr :
    public PointerSField<InternalWindow *,
                         WeakRefCountPolicy> {};
/*! \ingroup GrpContribToolboxUserInterfaceFieldSFields \ingroup GrpLibOSGContribToolboxUserInterface */
struct SFUncountedInternalWindowPtr :
    public PointerSField<InternalWindow *,
                         NoRefCountPolicy> {};


/*! \ingroup GrpContribToolboxUserInterfaceFieldMFields \ingroup GrpLibOSGContribToolboxUserInterface */
struct MFRecInternalWindowPtr :
    public PointerMField<InternalWindow *,
                         RecordedRefCountPolicy  > {};
/*! \ingroup GrpContribToolboxUserInterfaceFieldMFields \ingroup GrpLibOSGContribToolboxUserInterface */
struct MFUnrecInternalWindowPtr :
    public PointerMField<InternalWindow *,
                         UnrecordedRefCountPolicy> {};
/*! \ingroup GrpContribToolboxUserInterfaceFieldMFields \ingroup GrpLibOSGContribToolboxUserInterface */
struct MFWeakInternalWindowPtr :
    public PointerMField<InternalWindow *,
                         WeakRefCountPolicy      > {};
/*! \ingroup GrpContribToolboxUserInterfaceFieldMFields \ingroup GrpLibOSGContribToolboxUserInterface */
struct MFUncountedInternalWindowPtr :
    public PointerMField<InternalWindow *,
                         NoRefCountPolicy        > {};



/*! \ingroup GrpContribToolboxUserInterfaceFieldMFields \ingroup GrpLibOSGContribToolboxUserInterface */
struct MFUnrecChildInternalWindowPtr :
    public ChildPointerMField<
        InternalWindow *, 
        UnrecordedRefCountPolicy,
        nsOSG + 1             > {};


#endif // these are the doxygen hacks

OSG_END_NAMESPACE

#endif /* _OSGINTERNALWINDOWFIELDS_H_ */
