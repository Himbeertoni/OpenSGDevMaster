/*---------------------------------------------------------------------------*\
 *                                OpenSG                                     *
 *                                                                           *
 *                                                                           *
 *               Copyright (C) 2000-2013 by the OpenSG Forum                 *
 *                                                                           *
 *                            www.opensg.org                                 *
 *                                                                           *
@@if hasAuthors
@!AuthorsCommentText!@
@@else // hasAuthors
 * contact: dirk@opensg.org, gerrit.voss@vossg.org, carsten_neumann@gmx.net  *
@@endif // hasAuthors
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                License                                    *
 *                                                                           *
 * This library is free software; you can redistribute it and/or modify it   *
 * under the terms of the GNU Library General Public License as published    *
 * by the Free Software Foundation, version 2.                               *
 *                                                                           *
 * This library is distributed in the hope that it will be useful, but       *
 * WITHOUT ANY WARRANTY; without even the implied warranty of                *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU         *
 * Library General Public License for more details.                          *
 *                                                                           *
 * You should have received a copy of the GNU Library General Public         *
 * License along with this library; if not, write to the Free Software       *
 * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.                 *
 *                                                                           *
\*---------------------------------------------------------------------------*/
/*---------------------------------------------------------------------------*\
 *                                Changes                                    *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
 *                                                                           *
\*---------------------------------------------------------------------------*/

/*****************************************************************************\
 *****************************************************************************
 **                                                                         **
 **                  This file is automatically generated.                  **
 **                                                                         **
 **          Any changes made to this file WILL be lost when it is          **
 **           regenerated, which can become necessary at any time.          **
 **                                                                         **
 **     Do not change this file, changes should be done in the derived      **
 **     class @!Classname!@EventSource
 **                                                                         **
 *****************************************************************************
\*****************************************************************************/


#ifndef _OSG@!Classname!@EVENTSOURCEBASE_H_
#define _OSG@!Classname!@EVENTSOURCEBASE_H_
#ifdef __sgi
#pragma once
#endif


#include "@!HeaderPrefix!@OSGConfig.h"
@@if isInLibrary
#include "OSG@!Libname!@Def.h"
@@endif // isInLibrary

//#include "@!HeaderPrefix!@OSGBaseTypes.h"

@@if hasParentProducer
#include "@!ParentHeaderPrefix!@OSG@!nsParentFilePrefix!@@!parentProducer!@EventSource.h" // Parent Event Producer
@@else //hasParentProducer
@@if hasParentEventSource
#include "OSG@!parentEventSource!@.h" // Parent Event Source
@@else //hasParentEventSource
#include "OSGEventContainer.h"
@@endif
@@endif

#include "OSG@!nsFilePrefix!@@!Classname!@EventSourceFields.h"

@!LIBNAMESPACE!@_BEGIN_NAMESPACE

@!IMPORTNAMESPACE!@
class @!Classname!@EventSource;

//! \brief @!Classname!@EventSourceBase Base Class.

@@if isInLibrary
class OSG_@!LIBNAME!@_DLLMAPPING @!Classname!@EventSourceBase
@@else // isInLibrary
class @!Classname!@EventSourceBase
@@endif // isInLibrary
@@if hasParentProducer
    : public @!parentProducer!@EventSource
@@else //hasParentProducer
@@if hasParentEventSource
    : public @!parentEventSource!@
@@else
    : public EventContainer
@@endif
@@endif
{
  public:

@@if hasParentProducer
    typedef @!parentProducer!@EventSource Inherited;
    typedef @!parentProducer!@EventSource ParentContainer;
@@else
@@if hasParentEventSource
    typedef @!parentEventSource!@ Inherited;
    typedef @!parentEventSource!@ ParentContainer;
@@else
    typedef EventContainer Inherited;
    typedef EventContainer ParentContainer;
@@endif
@@endif
    
    typedef Inherited::TypeObject TypeObject;
    typedef TypeObject::InitPhase InitPhase;

    OSG_GEN_INTERNALPTR(@!Classname!@EventSource);

    /*==========================  PUBLIC  =================================*/

  public:
    /*---------------------------------------------------------------------*/
    /*! \name                    Class Get                                 */
    /*! \{                                                                 */

    static FieldContainerType &getClassType   (void);
    static UInt32              getClassTypeId (void);
    static UInt16              getClassGroupId(void);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                FieldContainer Get                            */
    /*! \{                                                                 */

    virtual       FieldContainerType &getType         (void);
    virtual const FieldContainerType &getType         (void) const;

    virtual       UInt32              getContainerSize(void) const;

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Binary Access                              */
    /*! \{                                                                 */

    virtual SizeT  getBinSize (ConstFieldMaskArg  whichField);
    virtual void   copyToBin  (BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);
    virtual void   copyFromBin(BinaryDataHandler &pMem,
                               ConstFieldMaskArg  whichField);


    /*! \}                                                                 */

    /*---------------------------------------------------------------------*/
    /*! \name                   Construction                               */
    /*! \{                                                                 */

    static  @!Classname!@EventSourceTransitPtr  create          (void);
    static  @!Classname!@EventSource           *createEmpty     (void);

    static  @!Classname!@EventSourceTransitPtr  createLocal     (
                                               BitVector bFlags = FCLocal::All);

    static  @!Classname!@EventSource            *createEmptyLocal(
                                              BitVector bFlags = FCLocal::All);

    static  @!Classname!@EventSourceTransitPtr  createDependent  (BitVector bFlags);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Copy                                   */
    /*! \{                                                                 */

    virtual FieldContainerTransitPtr shallowCopy     (void) const;
    virtual FieldContainerTransitPtr shallowCopyLocal(
                                       BitVector bFlags = FCLocal::All) const;
    virtual FieldContainerTransitPtr shallowCopyDependent(
                                                      BitVector bFlags) const;

    /*! \}                                                                 */

    /*=========================  PROTECTED  ===============================*/

  protected:

    static TypeObject _type;

    static       void   classDescInserter(TypeObject &oType);
    static const Char8 *getClassname     (void             );

    /*---------------------------------------------------------------------*/
    /*! \name                   Constructors                               */
    /*! \{                                                                 */

    @!Classname!@EventSourceBase(void);
    @!Classname!@EventSourceBase(const @!Classname!@EventSourceBase &source);

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                   Destructors                                */
    /*! \{                                                                 */

    virtual ~@!Classname!@EventSourceBase(void);

@@if isDynFCDerived
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                        Type                                  */
    /*! \{                                                                 */

    virtual       TypeObject &getFinalType(void);
    virtual const TypeObject &getFinalType(void) const;

@@endif
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     onCreate                                */
    /*! \{                                                                 */

    /*! \}                                                                 */
@@if hasParentFields
    /*---------------------------------------------------------------------*/
    /*! \name Parent linking                                               */
    /*! \{                                                                 */

    virtual bool linkParent  (FieldContainer * const pParent,
                              UInt16           const childFieldId,
                              UInt16           const parentFieldId);
    virtual bool unlinkParent(FieldContainer * const pParent,
                              UInt16           const parentFieldId);

    /*! \}                                                                 */
@@endif // @!hasParentPtrFields!@
@@if hasChildFields
    /*---------------------------------------------------------------------*/
    /*! \name Child linking                                                */
    /*! \{                                                                 */

    virtual bool unlinkChild(FieldContainer * const pChild,
                             UInt16           const childFieldId);

    /*! \}                                                                 */
@@endif // @!hasChildPtrFields!@
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

#ifdef OSG_MT_CPTR_ASPECT
    virtual void execSyncV(      FieldContainer    &oFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);

            void execSync (      @!Classname!@EventSourceBase *pFrom,
                                 ConstFieldMaskArg  whichField,
                                 AspectOffsetStore &oOffsets,
                                 ConstFieldMaskArg  syncMode  ,
                           const UInt32             uiSyncInfo);
#endif

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */

    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                     Aspect Create                            */
    /*! \{                                                                 */


#ifdef OSG_MT_CPTR_ASPECT
    virtual FieldContainer *createAspectCopy(
                                    const FieldContainer *pRefAspect) const;
#endif


    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Edit                                   */
    /*! \{                                                                 */
    /*! \}                                                                 */
    /*---------------------------------------------------------------------*/
    /*! \name                       Sync                                   */
    /*! \{                                                                 */

    virtual void resolveLinks(void);

    /*! \}                                                                 */
    /*==========================  PRIVATE  ================================*/
  private:
    /*---------------------------------------------------------------------*/
    // prohibit default functions (move to 'public' if you need one)
    void operator =(const @!Classname!@EventSourceBase &source);
};

typedef @!Classname!@EventSourceBase *@!Classname!@EventSourceBaseP;

@!LIBNAMESPACE!@_END_NAMESPACE

#endif /* _OSG@!Classname!@EventSourceBASE_H_ */
